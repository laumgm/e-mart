[{"C:\\e-mart\\frontend\\src\\index.js":"1","C:\\e-mart\\frontend\\src\\store.js":"2","C:\\e-mart\\frontend\\src\\reportWebVitals.js":"3","C:\\e-mart\\frontend\\src\\App.js":"4","C:\\e-mart\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\e-mart\\frontend\\src\\reducers\\productReducers.js":"6","C:\\e-mart\\frontend\\src\\reducers\\orderReducers.js":"7","C:\\e-mart\\frontend\\src\\reducers\\userReducers.js":"8","C:\\e-mart\\frontend\\src\\components\\AdminRoute.js":"9","C:\\e-mart\\frontend\\src\\components\\Footer.js":"10","C:\\e-mart\\frontend\\src\\components\\PrivateRoute.js":"11","C:\\e-mart\\frontend\\src\\components\\Header.js":"12","C:\\e-mart\\frontend\\src\\components\\SellerRoute.js":"13","C:\\e-mart\\frontend\\src\\screens\\OrderHistoryScreen.js":"14","C:\\e-mart\\frontend\\src\\screens\\CartScreen.js":"15","C:\\e-mart\\frontend\\src\\screens\\HomeScreen.js":"16","C:\\e-mart\\frontend\\src\\screens\\PlaceOrderScreen.js":"17","C:\\e-mart\\frontend\\src\\screens\\PaymentMethodScreen.js":"18","C:\\e-mart\\frontend\\src\\screens\\ProductListScreen.js":"19","C:\\e-mart\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\e-mart\\frontend\\src\\screens\\RegisterScreen.js":"21","C:\\e-mart\\frontend\\src\\screens\\ProductEditScreen.js":"22","C:\\e-mart\\frontend\\src\\screens\\ProfileScreen.js":"23","C:\\e-mart\\frontend\\src\\screens\\ProductScreen.js":"24","C:\\e-mart\\frontend\\src\\screens\\SigninScreen.js":"25","C:\\e-mart\\frontend\\src\\screens\\UserListScreen.js":"26","C:\\e-mart\\frontend\\src\\screens\\UserEditScreen.js":"27","C:\\e-mart\\frontend\\src\\screens\\OrderListScreen.js":"28","C:\\e-mart\\frontend\\src\\screens\\ShippingAddressScreen.js":"29","C:\\e-mart\\frontend\\src\\components\\SearchBox.js":"30","C:\\e-mart\\frontend\\src\\components\\FormContainer.js":"31","C:\\e-mart\\frontend\\src\\actions\\userActions.js":"32","C:\\e-mart\\frontend\\src\\constants\\cartConstants.js":"33","C:\\e-mart\\frontend\\src\\constants\\orderConstants.js":"34","C:\\e-mart\\frontend\\src\\constants\\productConstants.js":"35","C:\\e-mart\\frontend\\src\\constants\\userConstants.js":"36","C:\\e-mart\\frontend\\src\\components\\Product.js":"37","C:\\e-mart\\frontend\\src\\components\\MessageBox.js":"38","C:\\e-mart\\frontend\\src\\actions\\orderActions.js":"39","C:\\e-mart\\frontend\\src\\actions\\cartActions.js":"40","C:\\e-mart\\frontend\\src\\actions\\productActions.js":"41","C:\\e-mart\\frontend\\src\\components\\CheckoutSteps.js":"42","C:\\e-mart\\frontend\\src\\components\\LoadingBox.js":"43","C:\\e-mart\\frontend\\src\\components\\Paginate.js":"44","C:\\e-mart\\frontend\\src\\components\\Meta.js":"45"},{"size":665,"mtime":1623394817405,"results":"46","hashOfConfig":"47"},{"size":2232,"mtime":1623394817489,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1623394817415,"results":"49","hashOfConfig":"47"},{"size":3603,"mtime":1623480377657,"results":"50","hashOfConfig":"47"},{"size":1196,"mtime":1623394817408,"results":"51","hashOfConfig":"47"},{"size":2740,"mtime":1623475709503,"results":"52","hashOfConfig":"47"},{"size":3491,"mtime":1623394817410,"results":"53","hashOfConfig":"47"},{"size":3574,"mtime":1623394817414,"results":"54","hashOfConfig":"47"},{"size":549,"mtime":1623394817376,"results":"55","hashOfConfig":"47"},{"size":353,"mtime":1623394817379,"results":"56","hashOfConfig":"47"},{"size":531,"mtime":1623394817386,"results":"57","hashOfConfig":"47"},{"size":3903,"mtime":1623394817383,"results":"58","hashOfConfig":"47"},{"size":551,"mtime":1623394817393,"results":"59","hashOfConfig":"47"},{"size":2336,"mtime":1623394817420,"results":"60","hashOfConfig":"47"},{"size":4022,"mtime":1623394817418,"results":"61","hashOfConfig":"47"},{"size":1728,"mtime":1623484981546,"results":"62","hashOfConfig":"47"},{"size":5536,"mtime":1623394817473,"results":"63","hashOfConfig":"47"},{"size":2500,"mtime":1623394817471,"results":"64","hashOfConfig":"47"},{"size":4528,"mtime":1623480548044,"results":"65","hashOfConfig":"47"},{"size":9235,"mtime":1623394817469,"results":"66","hashOfConfig":"47"},{"size":3421,"mtime":1623394817481,"results":"67","hashOfConfig":"47"},{"size":7516,"mtime":1623394817474,"results":"68","hashOfConfig":"47"},{"size":6379,"mtime":1623394817480,"results":"69","hashOfConfig":"47"},{"size":3827,"mtime":1623483624110,"results":"70","hashOfConfig":"47"},{"size":2457,"mtime":1623394817484,"results":"71","hashOfConfig":"47"},{"size":3205,"mtime":1623394817487,"results":"72","hashOfConfig":"47"},{"size":3888,"mtime":1623394817486,"results":"73","hashOfConfig":"47"},{"size":3561,"mtime":1623394817467,"results":"74","hashOfConfig":"47"},{"size":3422,"mtime":1623394817483,"results":"75","hashOfConfig":"47"},{"size":789,"mtime":1623394817391,"results":"76","hashOfConfig":"47"},{"size":334,"mtime":1623394817381,"results":"77","hashOfConfig":"47"},{"size":5557,"mtime":1623394817316,"results":"78","hashOfConfig":"47"},{"size":281,"mtime":1623394817396,"results":"79","hashOfConfig":"47"},{"size":1473,"mtime":1623394817397,"results":"80","hashOfConfig":"47"},{"size":1128,"mtime":1623394817399,"results":"81","hashOfConfig":"47"},{"size":1546,"mtime":1623394817401,"results":"82","hashOfConfig":"47"},{"size":847,"mtime":1623394817388,"results":"83","hashOfConfig":"47"},{"size":179,"mtime":1623394817385,"results":"84","hashOfConfig":"47"},{"size":5325,"mtime":1623394817289,"results":"85","hashOfConfig":"47"},{"size":1208,"mtime":1623394817287,"results":"86","hashOfConfig":"47"},{"size":3401,"mtime":1623475183908,"results":"87","hashOfConfig":"47"},{"size":417,"mtime":1623394817378,"results":"88","hashOfConfig":"47"},{"size":622,"mtime":1623394817384,"results":"89","hashOfConfig":"47"},{"size":649,"mtime":1623480506471,"results":"90","hashOfConfig":"47"},{"size":603,"mtime":1623483326927,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1qv1ghh",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\e-mart\\frontend\\src\\index.js",[],["191","192"],"C:\\e-mart\\frontend\\src\\store.js",[],"C:\\e-mart\\frontend\\src\\reportWebVitals.js",[],"C:\\e-mart\\frontend\\src\\App.js",["193","194"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport AdminRoute from './components/AdminRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport CartScreen from './screens/CartScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\r\nimport SigninScreen from './screens/SigninScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport SellerRoute from './components/SellerRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n        <Header />\r\n        <main>\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n          <Route path=\"/product/:id\" component={ProductScreen} exact />\r\n          <Route path=\"/product/:id/edit\" component={ProductEditScreen} exact />\r\n          <Route path=\"/signin\" component={SigninScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/shipping\" component={ShippingAddressScreen} />\r\n          <Route path=\"/payment\" component={PaymentMethodScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path=\"/orderhistory\" component={OrderHistoryScreen} />\r\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact/>\r\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact/>\r\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} exact/>\r\n          <PrivateRoute\r\n            path=\"/profile\"\r\n            component={ProfileScreen}\r\n          ></PrivateRoute>\r\n          <AdminRoute\r\n            path=\"/admin/productlist\"\r\n            component={ProductListScreen}\r\n            exact\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            path=\"/admin/productlist/:pageNumber\"\r\n            component={ProductListScreen}\r\n            exact\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            path=\"/admin/orderlist\"\r\n            component={OrderListScreen}\r\n            exact\r\n          ></AdminRoute>\r\n          <AdminRoute path=\"/admin/userlist\" component={UserListScreen}></AdminRoute>\r\n          <AdminRoute\r\n            path=\"/admin/user/:id/edit\"\r\n            component={UserEditScreen}\r\n          ></AdminRoute>\r\n          <SellerRoute\r\n            path=\"/productlist/seller\"\r\n            component={ProductListScreen}\r\n          ></SellerRoute>\r\n          <SellerRoute\r\n            path=\"/orderlist/seller\"\r\n            component={OrderListScreen}\r\n          ></SellerRoute>\r\n\r\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n        </main>\r\n        <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\e-mart\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\e-mart\\frontend\\src\\reducers\\productReducers.js",[],"C:\\e-mart\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\e-mart\\frontend\\src\\reducers\\userReducers.js",[],"C:\\e-mart\\frontend\\src\\components\\AdminRoute.js",[],"C:\\e-mart\\frontend\\src\\components\\Footer.js",[],"C:\\e-mart\\frontend\\src\\components\\PrivateRoute.js",[],"C:\\e-mart\\frontend\\src\\components\\Header.js",["195","196","197"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Route  } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\r\nimport { signout } from '../actions/userActions.js';\r\nimport SearchBox from './SearchBox.js';\r\n\r\nexport default function Header() {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  \r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const dispatch = useDispatch();\r\n  \r\n  const signoutHandler = () => {\r\n    dispatch(signout());\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='primary' expand='lg' collapseOnSelect>\r\n        <Container className='p-2'>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Everyday Mart</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => \r\n              <SearchBox history={history} />} \r\n            />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart mr-2'/>Cart\r\n                  {cartItems.length > 0 && (\r\n                    <span className=\"badge\">{cartItems.length}</span>\r\n                  )}\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item className='dropdown-item'>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/orderhistory\">\r\n                    <NavDropdown.Item className='dropdown-item'>Order History</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* <LinkContainer to='/'> */}\r\n                    <NavDropdown.Item className='dropdown-item-signout' onClick={signoutHandler}>\r\n                      Sign out\r\n                    </NavDropdown.Item>\r\n                  {/* </LinkContainer> */}\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/signin'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user mr-2'/>Sign in\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isSeller && (\r\n                <NavDropdown title=\"Seller\" id=\"sellerMenu\">\r\n                  <LinkContainer to=\"/productlist/seller\">\r\n                    <NavDropdown.Item className='dropdown-item'>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/orderlist/seller\">\r\n                    <NavDropdown.Item className='dropdown-item'>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminMenu'>\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item className='dropdown-item'>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item className='dropdown-item' >Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item className='dropdown-item' >Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n","C:\\e-mart\\frontend\\src\\components\\SellerRoute.js",[],"C:\\e-mart\\frontend\\src\\screens\\OrderHistoryScreen.js",["198","199"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Table, Button } from 'react-bootstrap'\r\nimport { listOrderMine } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function OrderHistoryScreen(props) {\r\n  const [qty, setQty] = useState(0)\r\n  const orderMineList = useSelector((state) => state.orderMineList);\r\n  const { loading, error, orders } = orderMineList;\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(listOrderMine());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Container className='pt-5'>\r\n        <h3 className='text-center pb-3'>ORDER HISTORY</h3>\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">\r\n            {error}\r\n            .&nbsp;\r\n            <Link to='/'> \r\n              <b>Go Shopping</b>\r\n            </Link>\r\n          </MessageBox>\r\n        ) : (\r\n        <Table bordered striped responsive className=\"table-sm text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>PHP {order.totalPrice.toFixed(2)}</td>\r\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) \r\n                  : <i className='fas fa-times' />}</td>\r\n                <td>\r\n                  {order.isDelivered\r\n                    ? order.deliveredAt.substring(0, 10)\r\n                    : <i className='fas fa-times' />}\r\n                </td>\r\n                <td>\r\n                  <Button type=\"button\" className=\"btn-sm\" onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}>\r\n                    Details\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      </Container>\r\n    </>\r\n  );\r\n}","C:\\e-mart\\frontend\\src\\screens\\CartScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\HomeScreen.js",["200","201","202"],"C:\\e-mart\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\PaymentMethodScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\ProductListScreen.js",["203","204"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Table, Button } from 'react-bootstrap'\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n  listProducts,\r\n} from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport {\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_DELETE_RESET,\r\n} from '../constants/productConstants';\r\nimport Paginate from '../components/Paginate'\r\n\r\nexport default function ProductListScreen(props) {\r\n  const pageNumber = props.match.params.pageNumber || 1\r\n  const sellerMode = props.match.path.indexOf('/seller') >= 0;\r\n\r\n  const [addProduct, setAddProduct] = useState(false)\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages} = productList;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PRODUCT_CREATE_RESET });\r\n      props.history.push(`/product/${createdProduct._id}/edit`);\r\n    }\r\n    if (successDelete) {\r\n      dispatch({ type: PRODUCT_DELETE_RESET });\r\n    }\r\n    dispatch(listProducts({ seller: sellerMode ? userInfo._id : ''}, pageNumber));\r\n  }, [\r\n    createdProduct,\r\n    dispatch,\r\n    props.history,\r\n    sellerMode,\r\n    successCreate,\r\n    successDelete,\r\n    userInfo._id,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (product) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteProduct(product._id));\r\n    }\r\n  };\r\n\r\n  const createHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Container className='py-5'>\r\n        <div className='d-flex justify-content-between current-screen pb-3'>\r\n          <h3 className='text-center'>PRODUCTS</h3>\r\n          <Button type=\"button\" variant=\"primary\" className='btn-sm' onClick={createHandler}>\r\n            + Create Product\r\n          </Button>\r\n        </div>\r\n\r\n        {loadingDelete && <LoadingBox></LoadingBox>}\r\n        {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n\r\n        {loadingCreate && <LoadingBox></LoadingBox>}\r\n        {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n          <Table bordered striped responsive hover className=\"text-center table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>ACTIONS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant='warning'\r\n                      className=\"btn-sm\"\r\n                      onClick={() =>\r\n                        props.history.push(`/product/${product._id}/edit`)}\r\n                    >\r\n                      <i className='fas fa-edit' />\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant='danger'\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product)}\r\n                    >\r\n                      <i className='fas fa-trash' />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","C:\\e-mart\\frontend\\src\\screens\\OrderScreen.js",["205"],"import Axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Container, Button, ListGroup, Row, Col, Image } from 'react-bootstrap'\r\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET,\r\n} from '../constants/orderConstants';\r\n\r\n\r\nexport default function OrderScreen(props) {\r\n  const orderId = props.match.params.id;\r\n  \r\n  const redirect = props.location.search\r\n  ? props.location.search.split('=')[1]\r\n  : '/';\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const {\r\n    loading: loadingPay,\r\n    error: errorPay,\r\n    success: successPay,\r\n  } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n        const { data } = await Axios.get('/api/config/paypal');\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n        script.async = true;\r\n        script.onload = () => {\r\n          setSdkReady(true);\r\n        };\r\n        document.body.appendChild(script);\r\n      };\r\n      if (\r\n        !order ||\r\n        successPay ||\r\n        successDeliver ||\r\n        (order && order._id !== orderId)\r\n      ) {\r\n        dispatch({ type: ORDER_PAY_RESET });\r\n        dispatch({ type: ORDER_DELIVER_RESET });\r\n        dispatch(detailsOrder(orderId));\r\n      } else {\r\n        if (!order.isPaid) {\r\n          if (!window.paypal) {\r\n            addPayPalScript();\r\n          } else {\r\n            setSdkReady(true);\r\n          }\r\n        }\r\n      }\r\n    }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\r\n\r\n  \r\n    const goBack = () => {\r\n      history.goBack()\r\n    }\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(order, paymentResult));\r\n    };\r\n    const deliverHandler = () => {\r\n      if(order.paymentMethod === 'Cash On Delivery'){\r\n        dispatch(deliverOrder(order._id))\r\n      } else {\r\n        dispatch(deliverOrder(order._id));\r\n      }\r\n    };\r\n  \r\n  return loading ? ( <LoadingBox></LoadingBox> ) \r\n  : error ? ( <MessageBox variant=\"danger\">{error}</MessageBox> ) \r\n  : (\r\n    <Container className='py-5'>\r\n      <Button onClick={goBack}\r\n        className='btn btn-light my-3'>Go Back\r\n      </Button>\r\n      <div className='pt-3'>\r\n        <h3 className='text-center pb-3'>ORDER DETAILS</h3>\r\n        <Row className='d-flex align-items-start'>\r\n            <Col>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  {/* <div className=\"card card-body\"> */}\r\n                  <h4>Shipping</h4>\r\n                  <p>\r\n                    <strong>Name:</strong> {order.shippingAddress.fullName} <br />\r\n                    <strong>Address: </strong> {order.shippingAddress.address},\r\n                    {order.shippingAddress.city},{' '}\r\n                    {order.shippingAddress.postalCode},\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <MessageBox variant=\"success\">\r\n                      Delivered at {order.deliveredAt.substring(0, 10)}\r\n                    </MessageBox>\r\n                  ) : (\r\n                    <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                  )}\r\n                {/* </div> */}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  {/* <div className=\"card card-body\"> */}\r\n                    <h4>Payment</h4>\r\n                    <p>\r\n                      <strong>Method:</strong> {order.paymentMethod}\r\n                    </p>\r\n                    {order.isPaid ? (\r\n                      <MessageBox variant=\"success\">\r\n                        Paid at {order.paidAt.substring(0, 10)}\r\n                      </MessageBox>\r\n                    ) : (\r\n                      <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                    )}\r\n                  {/* </div> */}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  {/* <div className=\"card card-body\"> */}\r\n                    <h4>Order Items</h4>\r\n                    <ListGroup variant='flush'>\r\n                      {order.orderItems.map((item) => (\r\n                        <ListGroup.Item key={item.product}>\r\n                          <Row>\r\n                            <Col >\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                className=\"small\"\r\n                              ></Image>\r\n                            </Col>\r\n                            <Col className=\"min-30\">\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n    \r\n                            <div>\r\n                              {item.qty} x PHP {item.price} = PHP {item.qty * item.price}\r\n                            </div>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  {/* </div> */}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col>\r\n              {/* <div className=\"card card-body\"> */}\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h4>Order Summary</h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <div>Items</div>\r\n                      <div>PHP {order.itemsPrice.toFixed(2)}</div>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <div>Shipping</div>\r\n                      <div>PHP {order.shippingPrice.toFixed(2)}</div>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <div>Tax</div>\r\n                      <div>PHP {order.taxPrice.toFixed(2)}</div>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <div>\r\n                        <strong> Order Total</strong>\r\n                      </div>\r\n                      <div>\r\n                        <strong>PHP {order.totalPrice.toFixed(2)}</strong>\r\n                      </div>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n    \r\n                  {!order.isPaid && order.paymentMethod === 'PayPal' && (\r\n                    <ListGroup.Item>\r\n                      {!sdkReady ? (\r\n                        <LoadingBox></LoadingBox>\r\n                      ) : (\r\n                        <>\r\n                          {errorPay && (\r\n                            <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                          )}\r\n                          {loadingPay && <LoadingBox></LoadingBox>}\r\n    \r\n                          <PayPalButton\r\n                            amount={order.totalPrice}\r\n                            onSuccess={successPaymentHandler}\r\n                          ></PayPalButton>\r\n                        </>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  {userInfo.isAdmin \r\n                  && (order.isPaid || order.paymentMethod === 'Cash On Delivery')\r\n                  && !order.isDelivered && (\r\n                    <ListGroup.Item>\r\n                      {loadingDeliver && <LoadingBox></LoadingBox>}\r\n                      {errorDeliver && (\r\n                        <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>\r\n                      )}\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"primary block\"\r\n                        onClick={deliverHandler}\r\n                      >\r\n                        Deliver Order\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              {/* </div> */}\r\n            </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\e-mart\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\ProductEditScreen.js",["206"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { \r\n  detailsProduct, \r\n  updateProduct,\r\n  deleteProduct,\r\n} from '../actions/productActions';\r\nimport FormContainer from '../components/FormContainer'\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/admin/productlist');\r\n    }\r\n    if (!product || product._id !== productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProduct(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setBrand(product.brand);\r\n      setDescription(product.description);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        updateProduct({\r\n          _id: productId,\r\n          name,\r\n          price,\r\n          image,\r\n          category,\r\n          brand,\r\n          countInStock,\r\n          description,\r\n        })\r\n      );\r\n  };\r\n\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [errorUpload, setErrorUpload] = useState('');\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('image', file);\r\n    setLoadingUpload(true);\r\n    try {\r\n      const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      setImage(data);\r\n      setLoadingUpload(false);\r\n    } catch (error) {\r\n      setErrorUpload(error.message);\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  const discardHandler = () => {\r\n    if(window.confirm('Are you sure?')) {\r\n      if (!loadingUpdate) {\r\n        dispatch(deleteProduct(productId))\r\n        props.history.push('/admin/productlist')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='my-5'>\r\n      <Container>\r\n        <Button \r\n          className='btn btn-light my-3'\r\n          onClick={discardHandler}\r\n        >\r\n          Go Back\r\n        </Button>\r\n        <FormContainer>\r\n          <Form>\r\n            <h2>EDIT PRODUCT</h2>\r\n            {loadingUpdate && <LoadingBox></LoadingBox>}\r\n            {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n            {loading ? (\r\n              <LoadingBox></LoadingBox>\r\n              ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n              <>\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='price'>\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter price\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='image'>\r\n                  <Form.Label>Image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter image\"\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='imageFile'>\r\n                  <Form.Label>Image File</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    label=\"Choose Image\"\r\n                    onChange={uploadFileHandler}\r\n                    ></Form.Control>\r\n                  {loadingUpload && <LoadingBox></LoadingBox>}\r\n                  {errorUpload && (\r\n                    <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\r\n                    )}\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='category'>\r\n                  <Form.Label>Category</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter category\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='brand'>\r\n                  <Form.Label>Brand</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter brand\"\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='countInStock'>\r\n                  <Form.Label>Count In Stock</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter countInStock\"\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n  \r\n                <Form.Group controlId='description'>\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control as=\"textarea\"\r\n                    rows=\"3\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={submitHandler}>\r\n                  Update\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Form>\r\n        </FormContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n}","C:\\e-mart\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\ProductScreen.js",["207"],"C:\\e-mart\\frontend\\src\\screens\\SigninScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\e-mart\\frontend\\src\\screens\\ShippingAddressScreen.js",[],"C:\\e-mart\\frontend\\src\\components\\SearchBox.js",[],"C:\\e-mart\\frontend\\src\\components\\FormContainer.js",[],"C:\\e-mart\\frontend\\src\\actions\\userActions.js",[],"C:\\e-mart\\frontend\\src\\constants\\cartConstants.js",[],"C:\\e-mart\\frontend\\src\\constants\\orderConstants.js",[],"C:\\e-mart\\frontend\\src\\constants\\productConstants.js",[],"C:\\e-mart\\frontend\\src\\constants\\userConstants.js",[],"C:\\e-mart\\frontend\\src\\components\\Product.js",["208"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Card } from 'react-bootstrap';\r\n\r\nexport default function Product( {product} ) {\r\n //const {product} = props; \r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      {/* <Container className=''> */}\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img src={product.image} variant='top' alt={product.name}/>\r\n        </Link>\r\n      {/* </Container> */}\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>\r\n              {product.name.length > 30 ? product.name.substring(0, 30) + '...' : product.name}\r\n            </strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='h5'> PHP {product.price} </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  ) \r\n}","C:\\e-mart\\frontend\\src\\components\\MessageBox.js",[],"C:\\e-mart\\frontend\\src\\actions\\orderActions.js",[],"C:\\e-mart\\frontend\\src\\actions\\cartActions.js",[],"C:\\e-mart\\frontend\\src\\actions\\productActions.js",["209"],"import Axios from 'axios';\r\nimport {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n  dispatch({\r\n    type: PRODUCT_LIST_REQUEST,\r\n  });\r\n  \r\n  try {\r\n    const { data } = await Axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  \r\n  try {\r\n    const { data } = await Axios.get(`/api/products/${productId}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  \r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  \r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/products',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  \r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  \r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  \r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  \r\n  try {\r\n    const { data } = Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\e-mart\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\e-mart\\frontend\\src\\components\\LoadingBox.js",[],"C:\\e-mart\\frontend\\src\\components\\Paginate.js",[],"C:\\e-mart\\frontend\\src\\components\\Meta.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"218","line":2,"column":23,"nodeType":"216","messageId":"217","endLine":2,"endColumn":34},{"ruleId":"214","severity":1,"message":"219","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":14},{"ruleId":"214","severity":1,"message":"220","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"221","line":5,"column":15,"nodeType":"216","messageId":"217","endLine":5,"endColumn":18},{"ruleId":"214","severity":1,"message":"222","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":13},{"ruleId":"214","severity":1,"message":"223","line":10,"column":15,"nodeType":"216","messageId":"217","endLine":10,"endColumn":21},{"ruleId":"214","severity":1,"message":"224","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"225","line":3,"column":31,"nodeType":"216","messageId":"217","endLine":3,"endColumn":40},{"ruleId":"214","severity":1,"message":"226","line":3,"column":42,"nodeType":"216","messageId":"217","endLine":3,"endColumn":55},{"ruleId":"214","severity":1,"message":"227","line":21,"column":10,"nodeType":"216","messageId":"217","endLine":21,"endColumn":20},{"ruleId":"214","severity":1,"message":"228","line":21,"column":22,"nodeType":"216","messageId":"217","endLine":21,"endColumn":35},{"ruleId":"214","severity":1,"message":"229","line":19,"column":9,"nodeType":"216","messageId":"217","endLine":19,"endColumn":17},{"ruleId":"214","severity":1,"message":"219","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":14},{"ruleId":"214","severity":1,"message":"230","line":2,"column":57,"nodeType":"216","messageId":"217","endLine":2,"endColumn":61},{"ruleId":"214","severity":1,"message":"231","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"232","line":111,"column":13,"nodeType":"216","messageId":"217","endLine":111,"endColumn":17},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Link' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'qty' is assigned a value but never used.","'setQty' is assigned a value but never used.","'Helmet' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'addProduct' is assigned a value but never used.","'setAddProduct' is assigned a value but never used.","'redirect' is assigned a value but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]